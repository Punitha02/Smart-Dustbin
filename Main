#include <ThingSpeak.h>
#include <ESP8266WiFi.h>

 const int trigPin = 5;   
 const int echoPin = 4;   
 long duration;  
 int distance; 

const char* ssid     = "Krispot";         // The SSID (name) of the Wi-Fi network you want to connect to
const char* password = "Fr33d0m14"; 

WiFiClient  client;

unsigned long myChannelField =  2108104; // Channel ID
const int ChannelField = 1; // Which channel to write data
const char * myWriteAPIKey = "TBZVNV9XW4JDPMWR"; // Your write API Key

void setup() {
  // put your setup code here, to run once:
   pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output  
 pinMode(echoPin, INPUT); // Sets the echoPin as an Input  
 Serial.begin(115200); // Starts the serial communication
   ThingSpeak.begin(client);
  delay(10);
  Serial.println('\n'); 
   delay(10);
  Serial.println('\n');
  
  WiFi.begin(ssid, password);             // Connect to the network
  Serial.print("Connecting to ");
  Serial.print(ssid); Serial.println(" ...");

  int i = 0;
  while (WiFi.status() != WL_CONNECTED) { // Wait for the Wi-Fi to connect
    delay(1000);
    Serial.print(++i); Serial.print(' ');
  }

  Serial.println('\n');
  Serial.println("Connection established!");  
  Serial.print("IP address:\t");
  Serial.println(WiFi.localIP());  
}

void loop() {
  // put your main code here, to run repeatedly:
   // Clears the trigPin  
 digitalWrite(trigPin, LOW);  
 delayMicroseconds(2);  
 // Sets the trigPin on HIGH state for 10 micro seconds  
 digitalWrite(trigPin, HIGH);  
 delayMicroseconds(30);  
 digitalWrite(trigPin, LOW);  
 // Reads the echoPin, returns the sound wave travel time in microseconds  
 duration = pulseIn(echoPin, HIGH);  
 // Calculating the distance  
 distance= int((duration / 2) / 29.155);
 // Prints the distance on the Serial Monitor  
 Serial.print("Distance: ");  
 Serial.println(distance);  

ThingSpeak.writeField(myChannelField, ChannelField, distance, myWriteAPIKey);
 delay(15000);  

}
